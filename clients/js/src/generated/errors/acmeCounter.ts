/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

export const enum AcmeCounterProgramErrorCode {
  /** InvalidSystemProgram: Invalid System Program */
  INVALID_SYSTEM_PROGRAM = 0x0, // 0
  /** DeserializationError: Error deserializing account */
  DESERIALIZATION_ERROR = 0x1, // 1
  /** SerializationError: Error serializing account */
  SERIALIZATION_ERROR = 0x2, // 2
}

export class AcmeCounterProgramError extends Error {
  override readonly name = 'AcmeCounterProgramError';

  readonly code: AcmeCounterProgramErrorCode;

  readonly cause: Error | undefined;

  constructor(
    code: AcmeCounterProgramErrorCode,
    name: string,
    message: string,
    cause?: Error
  ) {
    super(`${name} (${code}): ${message}`);
    this.code = code;
    this.cause = cause;
  }
}

let acmeCounterProgramErrorCodeMap:
  | Record<AcmeCounterProgramErrorCode, [string, string]>
  | undefined;
if (__DEV__) {
  acmeCounterProgramErrorCodeMap = {
    [AcmeCounterProgramErrorCode.INVALID_SYSTEM_PROGRAM]: [
      'InvalidSystemProgram',
      `Invalid System Program`,
    ],
    [AcmeCounterProgramErrorCode.DESERIALIZATION_ERROR]: [
      'DeserializationError',
      `Error deserializing account`,
    ],
    [AcmeCounterProgramErrorCode.SERIALIZATION_ERROR]: [
      'SerializationError',
      `Error serializing account`,
    ],
  };
}

export function getAcmeCounterProgramErrorFromCode(
  code: AcmeCounterProgramErrorCode,
  cause?: Error
): AcmeCounterProgramError {
  if (__DEV__) {
    return new AcmeCounterProgramError(
      code,
      ...(
        acmeCounterProgramErrorCodeMap as Record<
          AcmeCounterProgramErrorCode,
          [string, string]
        >
      )[code],
      cause
    );
  }

  return new AcmeCounterProgramError(
    code,
    'Unknown',
    'Error message not available in production bundles. Compile with __DEV__ set to true to see more information.',
    cause
  );
}
